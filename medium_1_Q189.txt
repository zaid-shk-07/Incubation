
#Rotate array

Q)Given an array, rotate the array to the right by k steps, where k is non-negative.
Example 1:

Input: nums = [1,2,3,4,5,6,7], k = 3
Output: [5,6,7,1,2,3,4]
Explanation:
rotate 1 steps to the right: [7,1,2,3,4,5,6]
rotate 2 steps to the right: [6,7,1,2,3,4,5]
rotate 3 steps to the right: [5,6,7,1,2,3,4]
Example 2:

Input: nums = [-1,-100,3,99], k = 2
Output: [3,99,-1,-100]
Explanation: 
rotate 1 steps to the right: [99,-1,-100,3]
rotate 2 steps to the right: [3,99,-1,-100]




//solution 1

  class Solution {
    public void rotate(int[] nums, int k) {
     k=k%nums.length;
          
        reverse(nums,0,nums.length-1);
        reverse(nums,0,k-1);
        reverse(nums,k,nums.length-1);
    }
     public void reverse(int nums[],int start, int end){
       while(start<end){
       int temp=nums[start];
       nums[start]=nums[end];
       nums[end]=temp;
        start++;
       end--;
       }
    }
}

//solution 2
public class MyClass {
	
	    public void rotate(int[] nums, int k) {
	   for(int j=1;j<=k;j++)
	   {
		  
	int temp=nums[nums.length-1];
	for(int i=1;i<=nums.length-1;i++){
	nums[nums.length-i]=nums[nums.length-(i+1)];
	}
	 nums[0]=temp;
	}
	   for (int i = 0; i < nums.length; i++) {
		System.out.println(nums[i]);
	}
	    }

	    
	    public static void main(String[] args) {
	    	MyClass mcClass=new MyClass();
	    	System.out.println("s");
	    	int nums[]= {-1,-100,3,99};
			mcClass.rotate(nums, 2);
	    
		}
}
